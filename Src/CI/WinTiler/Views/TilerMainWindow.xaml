<lnk:WindowBase xmlns:lnk="clr-namespace:CI.Visual.Lib.Base;assembly=CI.Visual.Lib" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:stb="clr-namespace:CI.Visual.Lib.Helpers;assembly=CI.Visual.Lib" 
                xmlns:system="clr-namespace:System;assembly=mscorlib"
                xmlns:Views="clr-namespace:WinTiler.Views" x:Name="wnd" x:Class="WinTiler.Views.TilerMainWindow" mc:Ignorable="d"
                Title="Window Tiler - Loading ..." Height="380" Width="538" MinWidth="538" MaxWidth="538"
                Style="{DynamicResource WindowStyle_Aav0}" Loaded="onLoaded" Topmost="True">
  <lnk:WindowBase.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/BasicDefaultsLayout.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/DataGrid.Base.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/ComboBox.Base.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/DataGrid.Anime.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/ColorScheme/Theme.Color.Dark.Google.xaml" />
        <!--
        -->
      </ResourceDictionary.MergedDictionaries>

      <DataTemplate x:Key="myTaskTemplate">
        <Views:WinInfoTemplate Margin="0" Tag="{Binding ElementName=wnd, Path=St}" />
      </DataTemplate>

      <CollectionViewSource x:Key="_userViewSource"/>
      <CollectionViewSource x:Key="_permViewSource"/>

      <system:Double x:Key="blur">0</system:Double>

      <Style TargetType="{x:Type stb:HighlightableTextBlock}">
        <Setter Property="ToolTipService.ShowDuration" Value="999999" />
        <Setter Property="HighlightForeground" Value="#c00" />
        <Setter Property="HighlightBackground" Value="#fcc" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type stb:HighlightableTextBlock}">
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <TextBlock x:Name="PART_TEXT"/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <CollectionViewSource x:Key="_accountRequestViewSource"/>
      <!--<CollectionViewSource x:Key="categoryProductsViewSource" Source="{Binding Products, Source={StaticResource _accountRequestViewSource}}"/>-->

      <Style x:Key="RightAlignStyle"   TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right"	/>
      </Style>
      <Style x:Key="CenterAlignStyle"  TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center" />
      </Style>
      <Style x:Key="CenterAlignChkBox" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
      </Style>

      <SineEase    x:Key="si"     EasingMode="EaseIn" />
      <SineEase    x:Key="so"     EasingMode="EaseOut" />
      <SineEase    x:Key="sb"     EasingMode="EaseInOut" />
      <CubicEase   x:Key="co"     EasingMode="EaseOut" />
      <CubicEase   x:Key="ci"     EasingMode="EaseIn" />
      <CubicEase   x:Key="cb"     EasingMode="EaseInOut" />
      <QuarticEase x:Key="qo"     EasingMode="EaseOut" />
      <QuarticEase x:Key="qi"     EasingMode="EaseIn" />
      <QuarticEase x:Key="qb"     EasingMode="EaseInOut" />
      <BackEase    x:Key="ko"     EasingMode="EaseOut" />
      <BackEase    x:Key="ki"     EasingMode="EaseIn" />
      <BackEase    x:Key="kb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="ei"     EasingMode="EaseIn" />
      <ElasticEase x:Key="eo"     EasingMode="EaseOut" />
      <ElasticEase x:Key="eb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="eo0s5"  EasingMode="EaseOut" Oscillations="0" Springiness="5" />
      <ElasticEase x:Key="eo2s5"  EasingMode="EaseOut" Oscillations="2" Springiness="5" />
      <BounceEase  x:Key="bo"     EasingMode="EaseOut" />
      <Color x:Key="c">#1f00</Color>
      <Color x:Key="a">#3f00</Color>
      <Color x:Key="b">#1f00</Color>
      <Color x:Key="e">#10f0</Color>
      <Color x:Key="f">#00f0</Color>
      <LinearGradientBrush x:Key="rf1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop1a" Color="{StaticResource c}" Offset="0.0" />
        <GradientStop x:Name="GradientStop2a" Color="{StaticResource a}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3"  Color="{StaticResource b}" Offset="1.0" />
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="rf2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop3a" Color="{StaticResource f}" Offset="0.0" />
        <GradientStop x:Name="GradientStop3e" Color="{StaticResource e}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3d" Color="{StaticResource f}" Offset="1.0" />
      </LinearGradientBrush>

      <Storyboard x:Key="CompositeFlashing"   Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Red" To="Yellow" EasingFunction="{StaticResource eo}"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource eo}"/>
      </Storyboard>
      <Storyboard x:Key="ColorFlashing"       Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Orange" To="Yellow" EasingFunction="{StaticResource so}"/>
      </Storyboard>
      <Storyboard x:Key="OpacityFlashing"     Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource sb}"/>
      </Storyboard>
      <Storyboard x:Key="CompositeRestored"   Duration="0:0:1" FillBehavior="Stop" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>
      <Storyboard x:Key="ColorRestored"       Duration="0:0:1" FillBehavior="Stop">
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
      </Storyboard>
      <Storyboard x:Key="OpacityRestored"     Duration="0:0:1" FillBehavior="Stop">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>

      <Style x:Key="AnimOpacityDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="AnimOpacityDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="awesomeStyleRadlDiag" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrRadl}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardRadl}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridCellStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrDiag}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardDiag}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridRowStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrVert}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardVert}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

    </ResourceDictionary>
  </lnk:WindowBase.Resources>
  <WindowChrome.WindowChrome>
    <WindowChrome CaptionHeight="0" ResizeBorderThickness="10" />
  </WindowChrome.WindowChrome>
  <Border Style="{StaticResource BorderStyle_Aav0}" Background="#4888">
    <Grid>
      <Grid x:Name="ZommablePanel" Grid.ColumnSpan="2" >
        <Grid.Resources>
          <Style TargetType="{x:Type Border}">
            <Setter Property="CornerRadius"     Value="4"/>
            <Setter Property="Padding"          Value="5"/>
            <Setter Property="Background"       Value="{StaticResource BackBackgroundBrush}" />
            <Setter Property="Opacity"          Value=".9002" />
          </Style>
        </Grid.Resources>
        <Grid.LayoutTransform>
          <ScaleTransform ScaleX="{Binding ZV, ElementName=wnd, FallbackValue=1}" ScaleY="{Binding ZV, ElementName=wnd, FallbackValue=1}" />
        </Grid.LayoutTransform>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="143*"/>
          <ColumnDefinition Width="38*"/>
          <ColumnDefinition Width="456*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Rectangle Grid.Column="3" Grid.Row="1" Fill="#8444" Margin="-0 0 -3 -3" Grid.RowSpan="2" />

        <TextBlock Grid.ColumnSpan="4" Text="{Binding Title, ElementName=wnd}" FontSize="18" FontWeight="SemiBold" x:Name="tbkTitle" d:Text="(alex.pigida) - mtUATsqldb - Total 0 matches found in   2.76 sec." Margin="10,0,0,0"/>
        <Label Grid.Column="3" FontSize="18" FontWeight="SemiBold" x:Name="tbkTitl2" d:Content="_321" HorizontalAlignment="Center"/>

        <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Vertical" x:Name="ctrlPanel" Margin="5,5,5,5">
          <CheckBox Content="_SkipMin" x:Name="chkSM" Margin="5 10 5 5" IsChecked="True" />
          <Button   Content="_Find"    Click="onFind" Margin="2" />
          <Button   Content="_Tile"    Click="onTile" Margin="2" />
          <Button   Content="_Both"    Click="onBoth" Margin="2" IsDefault="True" FontWeight="Bold" />
          <!--
          <Button   Content="_NotM"    Click="onNotM" />
          <Button   Content="_Restore" Click="onRstr" />
          <Button   Click="onExit" IsCancel="True" />-->
        </StackPanel>

        <ListBox Grid.Row="1" BorderThickness="0" Width="443" ItemsSource="{Binding St.AllWindows}" ItemTemplate="{StaticResource myTaskTemplate}" Grid.ColumnSpan="3" Background="#8444"/>
        
      </Grid>
      <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.ColumnSpan="2">
        <Image Margin="5" Source="/WinTiler;component/Assets/A_Icon.ico"        Height="30" ToolTip="      for app icon"/>  
        <Image Margin="5" Source="/WinTiler;component/Assets/favicon.ico"       Height="30" ToolTip="      for app icon"/>  
        <Image Margin="5" Source="/WinTiler;component/Assets/ICN_SpriteKit.ico" Height="30" ToolTip="WORKs for app icon"/>  
        <Image Margin="5" Source="/WinTiler;component/Assets/T_Icon.ico"        Height="30" ToolTip="fails for app icon"/>  
        <Image Margin="5" Source="/WinTiler;component/Assets/W_Icon.ico"        Height="30" ToolTip="      for app icon"/>  
      </StackPanel>
    </Grid>
  </Border>

</lnk:WindowBase>
