<UserControl x:Class="CI.DS.Visual.Views.UserSpSelectorView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
             xmlns:system="clr-namespace:System;assembly=mscorlib" 
             xmlns:local="clr-namespace:CI.DS.Visual.Views"
             xmlns:Views="clr-namespace:CI.DS.Visual.Views"
             xmlns:vlh="clr-namespace:CI.Visual.Lib.Helpers;assembly=CI.Visual.Lib" 
             xmlns:cnv="clr-namespace:CI.DS.Visual.Converters"
             xmlns:xui="clr-namespace:CI.Standard.Lib.Views;assembly=CI.Visual.Lib" xmlns:vms="clr-namespace:CI.DS.ViewModel.VMs;assembly=CI.DS.ViewModel" d:DataContext="{d:DesignInstance Type=vms:UserSpSelectorVM}"
             Loaded="onLoaded"
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/BasicDefaultsLayout.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/DataGrid.Base.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/ComboBox.Base.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/DataGrid.Anime.xaml" />
        <!--
        <ResourceDictionary Source="/CI.Visual.Lib;component/ColorScheme/Theme.Color.Dark.Gray.xaml" />-->

        <!--ap:Backup theme + designer's:-->
        <ResourceDictionary Source="/CI.Visual.Lib;component/ColorScheme/Theme.Color.Lite.Gray.xaml" />

        <!--ap:Allows Style="{StaticResource WindowStyle_Aav0}"  (since it is on top of the visual tree over the Window) -->

      </ResourceDictionary.MergedDictionaries>

      <Style TargetType="ToggleButton">
        <Setter Property="VerticalAlignment"          Value="Center"  />
        <Setter Property="HorizontalAlignment"        Value="Center"  />
        <Setter Property="BorderThickness"            Value="0"  />
        <Setter Property="Height"                     Value="20"  />
        <Setter Property="Margin"                     Value="0"  />
        <Setter Property="Padding"                    Value="-22"  />
        <Setter Property="Background"                 Value="#aaa"  />
      </Style>

      <LinearGradientBrush x:Key="GridBackground1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Black"/>
        <GradientStop Color="White" Offset="1"/>
      </LinearGradientBrush>

      <Style TargetType="DataGridRow">
        <Setter Property="DetailsVisibility" Value="Collapsed"/>
        <!--<Setter Property="Background" Value="Lavender"/>-->
        <Style.Triggers>
          <DataTrigger Binding="{Binding Granted}" Value="True">
            <Setter Property="ToolTip" Value="Permissions granted. Click check-mark to revoke."/>
            <Setter Property="Background" Value="LightGreen"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding Selectd}" Value="True">
            <Setter Property="ToolTip" Value="Adjust permissions by clicking V/X in the Granted column"/>
            <Setter Property="Background" Value="#04e"/>
            <Setter Property="Foreground" Value="Yellow"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding Granted}" Value="False">
            <Setter Property="ToolTip" Value="No permissions granted. Click  X-mark  to grant."/>
            <!--<Setter Property="Background" Value="Transparent"/>-->
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <DataTemplate x:Key="LookTemplate">
        <Grid >
          <!--
        <Grid          Background="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                          Content="{Binding Granted, UpdateSourceTrigger=PropertyChanged}"
          -->
          <ToggleButton IsChecked="{Binding Granted, UpdateSourceTrigger=PropertyChanged}" Click="onTogglePermission" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock       Text="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToCharConverter}}" FontFamily="Wingdings" FontSize="26"
                       Foreground="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter}}" />
          </ToggleButton>
        </Grid>
      </DataTemplate>









      <CollectionViewSource x:Key="_userViewSource"/>
      <CollectionViewSource x:Key="_permViewSource"/>

      <system:Double x:Key="blur">0</system:Double>

      <Style TargetType="{x:Type vlh:HighlightableTextBlock}">
        <Setter Property="ToolTipService.ShowDuration" Value="999999" />
        <Setter Property="HighlightForeground" Value="#c00" />
        <Setter Property="HighlightBackground" Value="#fcc" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type vlh:HighlightableTextBlock}">
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <TextBlock x:Name="PART_TEXT"/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <CollectionViewSource x:Key="_accountRequestViewSource"/>
      <!--<CollectionViewSource x:Key="categoryProductsViewSource" Source="{Binding Products, Source={StaticResource _accountRequestViewSource}}"/>-->

      <Style x:Key="RightAlignStyle"   TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right"	/>
      </Style>
      <Style x:Key="CenterAlignStyle"  TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center" />
      </Style>
      <Style x:Key="CenterAlignChkBox" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
      </Style>

      <SineEase    x:Key="si"     EasingMode="EaseIn" />
      <SineEase    x:Key="so"     EasingMode="EaseOut" />
      <SineEase    x:Key="sb"     EasingMode="EaseInOut" />
      <CubicEase   x:Key="co"     EasingMode="EaseOut" />
      <CubicEase   x:Key="ci"     EasingMode="EaseIn" />
      <CubicEase   x:Key="cb"     EasingMode="EaseInOut" />
      <QuarticEase x:Key="qo"     EasingMode="EaseOut" />
      <QuarticEase x:Key="qi"     EasingMode="EaseIn" />
      <QuarticEase x:Key="qb"     EasingMode="EaseInOut" />
      <BackEase    x:Key="ko"     EasingMode="EaseOut" />
      <BackEase    x:Key="ki"     EasingMode="EaseIn" />
      <BackEase    x:Key="kb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="ei"     EasingMode="EaseIn" />
      <ElasticEase x:Key="eo"     EasingMode="EaseOut" />
      <ElasticEase x:Key="eb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="eo0s5"  EasingMode="EaseOut" Oscillations="0" Springiness="5" />
      <ElasticEase x:Key="eo2s5"  EasingMode="EaseOut" Oscillations="2" Springiness="5" />
      <BounceEase  x:Key="bo"     EasingMode="EaseOut" />
      <Color x:Key="c">#1f00</Color>
      <Color x:Key="a">#3f00</Color>
      <Color x:Key="b">#1f00</Color>
      <Color x:Key="e">#10f0</Color>
      <Color x:Key="f">#00f0</Color>
      <LinearGradientBrush x:Key="rf1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop1a" Color="{StaticResource c}" Offset="0.0" />
        <GradientStop x:Name="GradientStop2a" Color="{StaticResource a}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3"  Color="{StaticResource b}" Offset="1.0" />
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="rf2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop3a" Color="{StaticResource f}" Offset="0.0" />
        <GradientStop x:Name="GradientStop3e" Color="{StaticResource e}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3d" Color="{StaticResource f}" Offset="1.0" />
      </LinearGradientBrush>

      <Storyboard x:Key="CompositeFlashing"   Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Red" To="Yellow" EasingFunction="{StaticResource eo}"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource eo}"/>
      </Storyboard>
      <Storyboard x:Key="ColorFlashing"       Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Orange" To="Yellow" EasingFunction="{StaticResource so}"/>
      </Storyboard>
      <Storyboard x:Key="OpacityFlashing"     Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource sb}"/>
      </Storyboard>
      <Storyboard x:Key="CompositeRestored"   Duration="0:0:1" FillBehavior="Stop" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>
      <Storyboard x:Key="ColorRestored"       Duration="0:0:1" FillBehavior="Stop">
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
      </Storyboard>
      <Storyboard x:Key="OpacityRestored"     Duration="0:0:1" FillBehavior="Stop">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>

      <Style x:Key="AnimOpacityDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="AnimOpacityDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="awesomeStyleRadlDiag" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrRadl}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardRadl}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridCellStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrDiag}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardDiag}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridRowStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrVert}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardVert}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid x:Name="ZommablePanel" >
      <Grid.Resources>
        <Style TargetType="{x:Type Border}">
          <Setter Property="CornerRadius"     Value="4"/>
          <Setter Property="Padding"          Value="5"/>
          <Setter Property="Background"       Value="{StaticResource BackBackgroundBrush}" />
          <Setter Property="Opacity"          Value=".9002" />
        </Style>
      </Grid.Resources>
      <Grid.LayoutTransform>
        <ScaleTransform ScaleX="{Binding ZV, ElementName=wnd, FallbackValue=1}" ScaleY="{Binding ZV, ElementName=wnd, FallbackValue=1}" />
      </Grid.LayoutTransform>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="2"/>
        <RowDefinition Height="0"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="10"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <TextBlock Grid.ColumnSpan="3" Text="User - Stored Procedure Selector" FontSize="20" Margin="0 10" />
      <TextBlock Grid.ColumnSpan="3" Text="{Binding SqlConStr}" FontSize="10" HorizontalAlignment="Right" VerticalAlignment="Top"    Margin="5" d:Text="Sql con str" />
      <TextBlock Grid.ColumnSpan="3" Text="{Binding Report}"    FontSize="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5" d:Text="Hello. Is everything OK?" />

      <StackPanel Margin="6" HorizontalAlignment="Right" VerticalAlignment="Bottom">
        <StackPanel.Effect>
          <BlurEffect Radius="{Binding ElementName=wnd, Path=Blur, FallbackValue=0}" />
        </StackPanel.Effect>
        <TextBlock Text="Title" FontSize="11" FontWeight="SemiBold" x:Name="tbkTitle" d:Text="(alex.pigida) - mtUATsqldb - Total 0 matches found in   2.76 sec."/>
      </StackPanel>

      <Grid Grid.Row="1" Grid.RowSpan="2" Margin="8">
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#000" BlurRadius="6" />
          </Border.Effect>
        </Border>
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#fff" BlurRadius="6" Direction="135" />
          </Border.Effect>
        </Border>
      </Grid>
      <Grid Grid.Row="1" Grid.RowSpan="2" Margin="8" Grid.Column="2">
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#000" BlurRadius="6" />
          </Border.Effect>
        </Border>
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#fff" BlurRadius="6" Direction="135" />
          </Border.Effect>
        </Border>
      </Grid>

      <Rectangle Grid.Row="1" Margin="8 10 8 0" >
        <Rectangle.Fill>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#2fff" Offset="0"/>
            <GradientStop Color="#2000" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>
      <Rectangle Grid.Row="1" Margin="8 10 8 0" Grid.Column="3">
        <Rectangle.Fill>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#2fff" Offset="0"/>
            <GradientStop Color="#2000" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>

      <StackPanel Grid.Row="1" Margin="18 18 8 8" Orientation="Horizontal" x:Name="spc1" Visibility="Collapsed">
        <StackPanel.Effect>
          <BlurEffect Radius="{Binding ElementName=wnd, Path=Blur, FallbackValue=0}" />
        </StackPanel.Effect>
        <Button Content="_Clip" Margin="20 0" />
        <Label Content="_Filter" />
        <ComboBox x:Name="cbxOAF" Width="116" Height="26" Template="{DynamicResource ComboBoxTemplate_forIsEditable_False}" >
          <ComboBoxItem Content="Outstanding" IsSelected="True" />
          <ComboBoxItem Content="All"     />
          <ComboBoxItem Content="Filled"  />
        </ComboBox>
        <Button Content="Find" IsDefault="True" x:Name="btnFind" Margin="20 0" />
      </StackPanel>

      <Grid Grid.Row="1" Margin="18 18 8 8" Visibility="Visible">
        <Grid.Effect>
          <BlurEffect Radius="{Binding ElementName=wnd, Path=Blur, FallbackValue=0}" />
        </Grid.Effect>
      </Grid>

      <TextBlock Grid.Row="1" Margin="18 8 18 3" Grid.Column="0" x:Name="pfu" d:Text="Perm for User" Foreground="Blue" FontWeight="Medium" FontSize="18" HorizontalAlignment="Left" />
      <TextBlock Grid.Row="1" Margin="18 8 18 3" Grid.Column="3" x:Name="ufp" d:Text="User for Perm" Foreground="Blue" FontWeight="Medium" FontSize="18" HorizontalAlignment="Right" />

      <DataGrid Grid.Row="2" Grid.Column="0" x:Name="dgPerm" ItemsSource="{Binding Source={StaticResource _permViewSource}}" Margin="8 0 8 12" BorderThickness="0" HeadersVisibility="Column" Style="{StaticResource FullDeal}"
                    SelectionUnit="Cell" SelectedCellsChanged="dgPerm_SelectedCellsChanged" 
                    CanUserAddRows="True" SelectionChanged="dgPerm_SelectionChanged" GotFocus="dgPerm_GotFocus" LostFocus="dgPerm_LostFocus">
        <DataGrid.Columns>
          <DataGridTextColumn     Header="Stored Proc Name" Binding="{Binding DB_SP_Name}"  Width="*"/>
          <DataGridTemplateColumn Header="Granted" CellTemplate="{StaticResource LookTemplate}" x:Name="colPG"/>
        </DataGrid.Columns>
      </DataGrid>

      <DataGrid Grid.Row="2" Grid.Column="3" x:Name="dgUser" ItemsSource="{Binding Source={StaticResource _userViewSource}}" Margin="9 0 8 12" BorderThickness="0" HeadersVisibility="Column"
                    SelectionUnit="Cell" SelectedCellsChanged="dgUser_SelectedCellsChanged" 
                    CanUserAddRows="True" SelectionChanged="dgUser_SelectionChanged" GotFocus="dgUser_GotFocus" LostFocus="dgUser_LostFocus" >
        <DataGrid.Columns>
          <DataGridTextColumn     Header="User Name" Binding="{Binding UserId}"      Width="*"/>
          <DataGridTemplateColumn Header="Granted" CellTemplate="{StaticResource LookTemplate}" x:Name="colUG"/>
        </DataGrid.Columns>
      </DataGrid>

      <GridSplitter Grid.Column="2" Grid.RowSpan="2" />

      <Grid Grid.Row="1" Grid.RowSpan="4" x:Name="pnlBusy" Background="#dd84" Margin="8" Visibility="Collapsed" d:Visibility="Collapsed">
        <Grid.Effect>
          <BlurEffect Radius="0" />
        </Grid.Effect>
        <Viewbox>
          <TextBlock Text=" Saving changes... " Foreground="#49d" FontStyle="Italic"/>
        </Viewbox>
      </Grid>
    </Grid>

    <StackPanel Grid.ColumnSpan="6" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0">
      <Button Margin="5 0" Content="_Flsh"     Height="26" Click="onFlush" Opacity="0" />
      <Button Margin="5 0" Content="_Save"     Height="26" Click="onSave"  Visibility="Collapsed" />
      <Button	Margin="5 0" Content="Se_ttings" Height="26" Click="onSettings" ToolTip="Adjust application settings" VerticalAlignment="Stretch" Visibility="Collapsed" />
      <Button Margin="5 0" Content="_Add me"   Height="26" Click="onAddMe" x:Name="btnAddMe" />
      <ComboBox x:Name="cbxSrvr" Margin="5 0"  Height="26" SelectionChanged="cbxSrvr_SelectionChanged" MinWidth="40"/>
      <!-- More themes for later
        <xui:ThemeSelectorUsrCtrl x:Name="themeSelector"/>
        <TextBlock  x:Name="tbkVer" Text="V 0.3.26.12" Margin="10 0" Foreground="#07e" />
        -->
      <Button	Margin="2" Content="æ" FontFamily="Webdings"    FontSize="18" Height="26" Padding="0 -1" Width="26" Foreground="#F00" BorderThickness="0" ToolTip="Toggle Audio"      Click="onAudio"           Visibility="Collapsed"/>
    </StackPanel>

    <StackPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="30 20" Grid.RowSpan="2">
      <Button Padding="0 0 0 3" Height="50" Width="50" Content="◄ _OK" ToolTip="Go back to SP selector " Background="{DynamicResource MenuItemBackground3}" Command="{Binding UpdateViewCommand}" CommandParameter="Spsl" x:Name="focus0" IsDefault="True" >
        <Button.Resources>
          <Style TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="25"/>
          </Style>
        </Button.Resources>
      </Button>
    </StackPanel>

  </Grid>
</UserControl>
